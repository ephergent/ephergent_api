# Nginx configuration for Ephergent API

# Upstream block for the Gunicorn server
# This makes it easier to manage the backend address
upstream flask_api_server {
    # Assuming Gunicorn is running on localhost port 8000
    server 127.0.0.1:8000 fail_timeout=0;
}

# Server block to redirect HTTP to HTTPS
server {
    listen 80;
    listen [::]:80;
    server_name api.ephergent.com; # Replace with your domain

    # Optional: Let's Encrypt ACME challenge handling
    location ~ /.well-known/acme-challenge/ {
        allow all;
        root /var/www/html; # Or your webroot for challenges
    }

    location / {
        return 301 https://$host$request_uri; # Force HTTPS
    }
}

# Server block for HTTPS
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name api.ephergent.com; # Replace with your domain

    # SSL Configuration
    # Replace with your actual certificate paths (e.g., from Let's Encrypt/Certbot)
    ssl_certificate /etc/nginx/ssl/api.ephergent.com/fullchain.cer;
    ssl_certificate_key /etc/nginx/ssl/api.ephergent.com/api.ephergent.com.key;

    # Recommended SSL settings (consider using https://ssl-config.mozilla.org/)
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers off;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:10m; # Adjust size as needed
    ssl_session_tickets off;
    ssl_stapling on;
    ssl_stapling_verify on;
    # Add the path to your resolver DNS server IPs (e.g., Google's or your ISP's)
    # resolver 8.8.8.8 8.8.4.4 valid=300s;
    # resolver_timeout 5s;

    # Add Diffie-Hellman parameters (generate with: openssl dhparam -out /etc/nginx/dhparam.pem 2048)
    # ssl_dhparam /etc/nginx/dhparam.pem;

    # Security Headers
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    # Optional: Content Security Policy (adjust as needed, can be complex)
    # add_header Content-Security-Policy "default-src 'self'; script-src 'self'; object-src 'none'; style-src 'self'; img-src 'self'; media-src 'none'; frame-src 'none'; font-src 'self'; connect-src 'self';" always;

    # Access and error logs
    access_log /var/log/nginx/api.ephergent.com.access.log;
    error_log /var/log/nginx/api.ephergent.com.error.log;

    # Location block to proxy requests to the Flask/Gunicorn app
    location / {
        # Proxy settings
        proxy_pass http://flask_api_server; # Pass requests to the upstream block

        # Set headers to pass necessary information to the backend application
        proxy_set_header Host $host; # Pass the original host header
        proxy_set_header X-Real-IP $remote_addr; # Pass the real client IP
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; # Pass the proxy chain IPs
        proxy_set_header X-Forwarded-Proto $scheme; # Pass the original scheme (http or https)
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;

        # Adjust proxy timeouts if needed
        # proxy_connect_timeout 60s;
        # proxy_send_timeout 60s;
        # proxy_read_timeout 60s;

        # Allow larger client request bodies if necessary (e.g., for file uploads)
        # client_max_body_size 10M;
    }

    # Optional: Add specific location blocks for static files if served by Nginx
    # location /static {
    #     alias /path/to/your/static/files;
    #     expires 7d;
    #     access_log off;
    # }
}
